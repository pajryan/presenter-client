{
  "globalInputs":[
    {
      "referenceId": "globalAsOfDate",
      "label": "As of date (inclusive)",
      "type": "datetime",
      "value": "{today}"
    }
  ],
  
  "dataSources" : [
    {
      "name": "DoubleNumber",
      "isStoredProcedure": false,
      "sqlString": "select {1}*2 as passedValue",
      "sqlParameters": [
        {
          "label": "Number to double",
          "type": "int",
          "value": 6
        }
      ],
      "resultHandling": [
        {
          "filename": "DoubleNumber.json",
          "qa": {
            "scripts": [],
            "asOfDateScript": "maxDate(date)",
            "chart": null
          }
        }
      ]
    },

    {
      "name": "Triple and Double",
      "isStoredProcedure": false,
      "sqlString": "select {1}*3 as passedValue; select {2}*2 as passedValue",
      "sqlParameters": [
        {
          "label": "Number to triple",
          "type": "int",
          "value": 10
        },
        {
          "label": "Number to double",
          "type": "int",
          "value": 10
        }
      ],
      "resultHandling": [
        {
          "filename": "TripleNumberFile.json",
          "qa": {
            "scripts": [
              {"function": "findMedian", "parameters": ["passedValue"]},
              {"function": "findMedian", "parameters": ["passedValue"]}
            ],
            "asOfDateScript": "maxDate(date)",
            "sparklineFields": ["passedValue"]
          }
        },
        {
          "filename": "DoubleNumberFile.json",
          "qa": {
            "scripts": [],
            "asOfDateScript": "maxDate(date)",
            "chart": null
          }
        }
        
      ]
    },

    {
      "name": "BrokerLiquidity",
      "isStoredProcedure": true,
      "sqlString": "marketing2..broker_liquidity",
      "sqlParameters": [],
      "resultHandling": [
        {
          "filename": "BrokerLiquidity.json",
          "qa": {
            "scripts": [],
            "asOfDateScript": "maxDate(date)",
            "chart": null
          }
        }
      ]
    },

    {
      "name": "RiskPremium",
      "notes": "Provides DP, market spread and expected loss over time",
      "isStoredProcedure": false,
      "sqlString": "select convert(VARCHAR(10),price_date,101) as date, dp1 as dp, spread as marketSpread, expected_loss as expectedLossSpread from macro..expected_loss order by price_date",
      "sqlParameters": [],
      "resultHandling": [
        {
          "filename": "RiskPremium.json",
          "qa": {
            "scripts": [
              {"function": "findMedian", "parameters": ["dp"]},
              {"function": "findMedian", "parameters": ["marketSpread"]}
            ],
            "asOfDateScript": "maxDate(date)",
            "sparklineFields": ["marketSpread","dp"]
          }
        }
      ]
      
    },

    {
      "name": "TestUserName",
      "isStoredProcedure": false,
      "sqlString": "select * from user_admin..user_login; select * from user_admin..user_login where user_id < {1} and ldap_user_name like '%{2}%'",
      "sqlParameters": [
        {
          "label": "user Id number less than:",
          "type": "int",
          "value": 30
        },
        {
          "label": "ldap name contains:",
          "type": "varchar",
          "value": "a"
        }
      ],
      "resultHandling": [
        {
          "filename": "TestUserName1.json",
          "qa": {
            "scripts": [],
            "asOfDateScript": "",
            "chart": null
          }
        },
        {
          "filename": "TestUserName2.json",
          "qa": {
            "scripts": [],
            "asOfDateScript": "",
            "chart": null
          }
        }
      ]
    }


    
  ]



}